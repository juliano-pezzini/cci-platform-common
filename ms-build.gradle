buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.0.1'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.3.0.RELEASE'
        classpath 'io.spring.dependency-management:1.0.7.RELEASE'
    }
}

apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: org.sonarqube.gradle.SonarQubePlugin

apply from: "${rootDir}/.cci-common/build.gradle"

dependencies {
    // Spring Boot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version:'2.3.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Prometheus
    compile 'io.micrometer:micrometer-registry-prometheus:latest.release'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Swagger
    compile 'io.springfox:springfox-swagger2:2.9.1'
    compile 'io.springfox:springfox-swagger-ui:2.9.1'
}

ext {
    set('githubRunId', System.getenv()['GITHUB_RUN_ID'])
    set('githubServerUrl', System.getenv()['GITHUB_SERVER_URL'])
    set('githubRepository', System.getenv()['GITHUB_REPOSITORY'])
}

war {
    enabled = true
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "${rootProject.name}"
            from components.web
        }
    }
}
